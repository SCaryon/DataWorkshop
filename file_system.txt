1. 用户的文件系统：
每个用户在注册的时候，会自动创建自己的文件系统，详见def login_signup()方法，每个用户文件夹下面有几个文件夹：
img：存储用户的图像
code：存储用户上传的自己的代码
report：存储用户生成的报告
data：存储用户上传的数据
如果你想要增加别的文件夹，可以直接os.makedirs(cur_dir + "/新文件夹名称")
2. 文件上传方法：
1）使用form表单：
前端：
<form method="post" action="/geo/plane/upload/export/" enctype="multipart/form-data">
     <input type="file" name="file" id="file">
     <input type="submit" value="upload">
 </form>
后台：
后台目前的想法是：要求用户必须登录才能够上传文件，最简略的方法如下，有详细的注释：
    if session.get('email'):#用户登录会存一个email的session，所以只需要检查session是否存在，如果没有就跳转到登录界面
        email = session.get('email')
        user1 = user.query.filter_by(email=email).first()
        if user1 is None:
            return "false"
        else:
            if request.method == 'POST':
	# 上传的数据的存储路径为下面的path，你们可以根据自己的需求做稍微的更改
                path = "./static/user/" + email + "/data/"
                filedata = request.files['file']#从前端获得file
                if filedata:
	    # 对文件的处理方案是：删除原有的遗存文件，然后保存当前文件。
	    # 为了防止出现冲突，最好每个方法都确定有固定的文件名，然后
	    # 将用户上传的文件存储并重命名为自己确定的文件名
	    #请一定串通好，两个方法不要用同一个文件名。我这里用的是countries.xlsx
                    if os.path.exists(path + filedata.filename):
                        os.remove(path + filedata.filename)
                    if os.path.exists(path + "countries.xlsx"):
                        os.remove(path + "countries.xlsx")
                    try:
                        filedata.save(path + filedata.filename)
                    except IOError:
                        return '上传文件失败'
                    os.rename(path + filedata.filename, path + "countries.xlsx")
                else:
                    return "filename invalid or network error"
            return redirect(url_for('geo_globe'))# 上传成功以后，跳转到新的方法中去
    else: # 没有登录，跳转到登录页面
        session["last_page"]="/geo/<%s>" % id
        return render_template('user/login.html')

2）使用ajax，可自行百度，有新的方法请更新本文档以帮助后来开发人员